name: C++ Build and Release on Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up MSVC and Compile
        shell: cmd
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath > installationPath.txt
          set /p installationPath=<installationPath.txt
          call "%installationPath%\VC\Auxiliary\Build\vcvars64.bat"
          cl /EHsc chrome_decrypt.cpp ole32.lib oleaut32.lib shell32.lib version.lib comsuppw.lib advapi32.lib shlwapi.lib /link /out:chrome_decrypt.exe

      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: chrome_decrypt.exe
          path: chrome_decrypt.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: chrome_decrypt.exe

      - name: Get Version Tag
        id: get_version
        run: |
          # Get the latest tag, fallback to v1.0.0 if no tags are present
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          
          # Increment the patch version (e.g., v1.0.0 -> v1.0.1)
          version=${latest_tag%.*}.$((${latest_tag##*.}+1))
          
          # Set the new version as an output
          echo "version=$version" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          release_name: "Release ${{ env.version }}"
          body: "Automated release of chrome_decrypt.exe."
          files: chrome_decrypt.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
